#include <mbed.h>
#include <EthernetInterface.h>
#include <Timer.h>

// Initialize network interface
EthernetInterface eth;

#define IP "192.168.1.177"
#define GATEWAY "192.168.1.1"
#define MASK "255.255.255.0"

// Initialize timer
Timer t;

int main(int, char **)
{
    nsapi_size_or_error_t  status;

    // Set up static IP
    eth.disconnect();
    status = eth.set_network(IP, MASK, GATEWAY);
    printf("set IP status: %i \r\n", status);

    // Start the network interface
    status = eth.connect();
    printf("Ethernet connection status: %i \r\n", status);

    // Create a socket
    TCPSocket sock;
    sock.open(&eth);

    // Connect
    status = sock.connect("192.168.1.72", 50000);
    printf("Socket connection status: %i \r\n", status);

    // Show the network address
    const char *ip = eth.get_ip_address();
    const char *mac = eth.get_mac_address();
    printf("IP address is: %s\n", ip ? ip : "No IP");
    printf("MAC address is: %s\n", mac ? mac : "No MAC");

    int16_t buffer[10];
    for(int i = 0; i < 10; i++)
    {
        buffer[i] = i + 100;
    }

    t.start();
    // Send data
    sock.send(buffer, sizeof(buffer));
    t.stop();
    printf("The time taken was %f seconds\n", t.read());

    // Receive data
    // char buf[100];
    sock.recv(buffer, sizeof(buffer));
    for(int i = 0; i < 10; i++)
    {
        printf("%hi ", buffer[i]);
    }
    printf("\n");

    // Close the socket
    status = sock.close();
    printf("Socket closing status: %i \r\n", status);
}
